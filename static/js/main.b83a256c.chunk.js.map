{"version":3,"sources":["components/Layout.js","components/QuotesMachine.js","pages/Quotes.js","App.js","index.js","components/QuotesMachine.module.css"],"names":["Layout","props","className","classes","main","children","QuotesMachine","console","log","list","useState","Math","floor","random","length","quote","setQuote","author","setAuthor","quoteBox","id","content","text","newQuote","onClick","twitter","href","src","Quotes","isLoading","setIsLoading","setList","useEffect","fetch","then","respone","json","data","quotes","App","exact","path","element","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sPAOeA,MALf,SAAgBC,GACZ,OAAO,sBAAMC,UAAWC,IAAQC,KAAzB,SACFH,EAAMI,Y,uBC0BAC,MA3Bf,SAAuBL,GAEnBM,QAAQC,IAAIP,EAAMQ,MAClB,MAAwBC,mBAAST,EAAMQ,KAAKE,KAAKC,MAAMD,KAAKE,SAASZ,EAAMQ,KAAKK,SAASC,OAAzF,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAST,EAAMQ,KAAKE,KAAKC,MAAMD,KAAKE,SAASZ,EAAMQ,KAAKK,SAASG,QAA3F,mBAAOA,EAAP,KAAeC,EAAf,KAMA,OACI,sBAAKhB,UAAWC,IAAQgB,SAAUC,GAAG,YAArC,UACI,sBAAKlB,UAAWC,IAAQkB,QAAxB,UACI,uBAAMnB,UAAWC,IAAQmB,KAAMF,GAAG,OAAlC,eAA4CL,EAA5C,QACA,sBAAKb,UAAWC,IAAQc,OAAQG,GAAG,SAAnC,eAA+CH,QAE/C,wBAAQf,UAAWC,IAAQoB,SAAUH,GAAG,YAAYI,QAVhE,WACIR,EAASf,EAAMQ,KAAKE,KAAKC,MAAMD,KAAKE,SAASZ,EAAMQ,KAAKK,SAASC,OACjEG,EAAUjB,EAAMQ,KAAKE,KAAKC,MAAMD,KAAKE,SAASZ,EAAMQ,KAAKK,SAASG,SAQ1D,uBACJ,sBAAKf,UAAWC,IAAQsB,QAAxB,UACA,wDACI,mBAAGvB,UAAU,uBAAuBkB,GAAG,cACvCM,KAAK,mCADL,SAEA,qBAAKC,IAAI,qF,MCGTC,MAvBhB,WACI,MAAgClB,oBAAS,GAAzC,mBAAOmB,EAAP,KAAkBC,EAAlB,KACA,EAAsBpB,mBAAS,IAA/B,mBAAOD,EAAP,KAAasB,EAAb,KAYA,OAVAC,qBAAU,WACVF,GAAa,GACbG,MAAM,0IACJC,MAAK,SAAAC,GAAO,OAAGA,EAAQC,UACxBF,MAAK,SAAAG,GACF9B,QAAQC,IAAI6B,GACZN,EAAQM,EAAKC,QACbR,GAAa,QAEnB,IACKD,EACQ,2CAGP,kCACI,cAAC,EAAD,CAAepB,KAAMA,OCNlB8B,MAZf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,aCJzCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,SAAW,gCAAgC,QAAU,+BAA+B,QAAU,+BAA+B,KAAO,4BAA4B,OAAS,8BAA8B,SAAW,mC","file":"static/js/main.b83a256c.chunk.js","sourcesContent":["import classes from \"./Layout.module.css\"\r\n\r\nfunction Layout(props){\r\n    return <main className={classes.main}>\r\n        {props.children}\r\n    </main>\r\n}\r\nexport default Layout;","import { useState } from \"react\";\r\nimport classes from \"./QuotesMachine.module.css\";\r\n\r\nfunction QuotesMachine(props){\r\n\r\n    console.log(props.list);\r\n    const [quote, setQuote]=useState(props.list[Math.floor(Math.random()*props.list.length)].quote);\r\n    const [author, setAuthor]=useState(props.list[Math.floor(Math.random()*props.list.length)].author);\r\n\r\n    function randomHandler(){\r\n        setQuote(props.list[Math.floor(Math.random()*props.list.length)].quote);\r\n        setAuthor(props.list[Math.floor(Math.random()*props.list.length)].author);\r\n    }\r\n    return (\r\n        <div className={classes.quoteBox} id=\"quote-box\">\r\n            <div className={classes.content}>\r\n                <span className={classes.text} id=\"text\">\" {quote} \"</span>\r\n                <div className={classes.author} id=\"author\">- {author}</div>\r\n            </div>\r\n                <button className={classes.newQuote} id=\"new-quote\" onClick={randomHandler}>New Quote</button>\r\n            <div className={classes.twitter}>\r\n            <span>Share current quote!</span>\r\n                <a className=\"twitter-share-button\" id=\"tweet-quote\"\r\n                href=\"https://twitter.com/intent/tweet\" >\r\n                <img src=\"https://www.iconpacks.net/icons/2/free-twitter-logo-icon-2429-thumb.png\" /></a>\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\nexport default QuotesMachine;","import { useEffect, useState } from \"react\";\r\nimport QuotesMachine from \"../components/QuotesMachine\";\r\nimport classes from \"./Quotes.module.css\"\r\n\r\nfunction Quotes (){\r\n    const [isLoading, setIsLoading]=useState(true);\r\n    const [list, setList]=useState([]);\r\n    \r\n    useEffect(()=>{\r\n    setIsLoading(true);\r\n    fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n    ).then(respone=> respone.json())\r\n    .then(data=>{\r\n        console.log(data);\r\n        setList(data.quotes);\r\n        setIsLoading(false);\r\n    });\r\n},[]);\r\n    if(isLoading){\r\n        return <p>...Loading</p>;\r\n    }\r\n    return (\r\n        <section>\r\n            <QuotesMachine list={list}/>\r\n        </section>\r\n    );\r\n}\r\n export default Quotes;","import {Route} from \"react-router-dom\";\nimport {Routes} from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Quotes from \"./pages/Quotes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Routes>\n          <Route exact path=\"/\" element={<Quotes />} />\n        </Routes>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter >\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quoteBox\":\"QuotesMachine_quoteBox__1Pi07\",\"twitter\":\"QuotesMachine_twitter__11xEJ\",\"content\":\"QuotesMachine_content__2NPbV\",\"text\":\"QuotesMachine_text__uplsu\",\"author\":\"QuotesMachine_author__2nE1F\",\"newQuote\":\"QuotesMachine_newQuote__2lxgT\"};"],"sourceRoot":""}